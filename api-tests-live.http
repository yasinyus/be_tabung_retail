### üåê Live Server - test.gasalamsolusi.my.id (NO ROLE PARAMETER)

# Test Public Endpoint
GET https://test.gasalamsolusi.my.id/api/test

###

# Test Homepage
GET https://test.gasalamsolusi.my.id

###

# Staff Login - Kepala Gudang (NO ROLE PARAMETER)
POST https://test.gasalamsolusi.my.id/api/login-staff
Content-Type: application/json

{
  "email": "kepala_gudang@tabungretail.com",
  "password": "admin123"
}

###

# Staff Login - Operator (NO ROLE PARAMETER)
POST https://test.gasalamsolusi.my.id/api/login-staff
Content-Type: application/json

{
  "email": "operator@tabungretail.com",
  "password": "admin123"
}

###

# Staff Login - Admin (NO ROLE PARAMETER)
POST https://test.gasalamsolusi.my.id/api/login-staff
Content-Type: application/json

{
  "email": "admin@tabungretail.com",
  "password": "admin123"
}

###

# Customer Login (NO ROLE PARAMETER)
POST https://test.gasalamsolusi.my.id/api/login-pelanggan
Content-Type: application/json

{
  "email": "pelanggan@test.com",
  "password": "password123"
}

###

# Get Tabung Data (Replace YOUR_TOKEN with actual token from login)
GET https://test.gasalamsolusi.my.id/api/tabung
Authorization: Bearer YOUR_TOKEN

###

# Get Armada Data
GET https://test.gasalamsolusi.my.id/api/armada
Authorization: Bearer YOUR_TOKEN

###

# Get Gudang Data
GET https://test.gasalamsolusi.my.id/api/gudang
Authorization: Bearer YOUR_TOKEN

###

# Get Pelanggan Data
GET https://test.gasalamsolusi.my.id/api/pelanggan
Authorization: Bearer YOUR_TOKEN

###

# Logout
POST https://test.gasalamsolusi.my.id/api/logout
Authorization: Bearer YOUR_TOKEN

###

# Test Invalid Login (should return 401/422)
POST https://test.gasalamsolusi.my.id/api/login-staff
Content-Type: application/json

{
  "email": "invalid@email.com",
  "password": "wrongpassword"
}

###

# Test Protected Endpoint without Token (should return 401)
GET https://test.gasalamsolusi.my.id/api/tabung

###

# Test with Invalid Token (should return 401)
GET https://test.gasalamsolusi.my.id/api/tabung
Authorization: Bearer invalid_token_here

### 

# Health Check - Should return server status
GET https://test.gasalamsolusi.my.id/api/health

###

# Test Admin Panel Access
GET https://test.gasalamsolusi.my.id/admin

###

# Test Database Connection (if deployed)
GET https://test.gasalamsolusi.my.id/database_connection_fix.php

###

# üìù INSTRUCTIONS:
# 1. Copy token from login response
# 2. Replace "YOUR_TOKEN" with actual token in protected endpoints
# 3. Click "Send Request" button next to each request
# 4. Check responses for expected data structure

# üîë TEST ACCOUNTS:
# Staff: kepala_gudang@tabungretail.com / admin123
# Staff: operator@tabungretail.com / admin123  
# Admin: admin@tabungretail.com / admin123
# Customer: pelanggan@test.com / password123

# ‚úÖ EXPECTED RESPONSES (NEW FORMAT):
# - Staff Login: {"status":"success","token":"1|abc123...","user":{"id":1,"name":"...","role":"kepala_gudang"}}
# - Customer Login: {"status":"success","token":"1|abc123...","user":{"id":1,"name":"...","kode_pelanggan":"..."}}
# - Data: {"success":true,"data":[...]}
# - Error: {"status":"error","message":"Invalid credentials"} (HTTP 401)

# üÜï CHANGES:
# - ‚úÖ Login endpoints NO LONGER require "role" parameter
# - ‚úÖ Response format with "status" instead of "success"
# - ‚úÖ User role automatically detected from database
# - ‚úÖ Simpler request format for Flutter integration
# - ‚úÖ Better security - role cannot be manipulated in request

# üéØ FLUTTER EXAMPLE:
# final response = await http.post(
#   Uri.parse('https://test.gasalamsolusi.my.id/api/login-staff'),
#   headers: {'Content-Type': 'application/json'},
#   body: jsonEncode({
#     'email': 'kepala_gudang@tabungretail.com',
#     'password': 'admin123',
#     // No role parameter needed!
#   }),
# );
#
# final data = jsonDecode(response.body);
# if (data['status'] == 'success') {
#   String token = data['token'];
#   String userRole = data['user']['role']; // Auto-detected!
# }
